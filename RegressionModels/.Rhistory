swirl()
library(swirl)
swirl()
bye()
swirl()
x <- c(0.61, 0.93, 0.83, 0.35, 0.54, 0.16, 0.91, 0.62, 0.62)
y <- c(0.67, 0.84, 0.6, 0.18, 0.85, 0.47, 1.1, 0.65, 0.36)
lm(y~x)
lm.test(y~x)
z <- lm(y~x)
z
summary(z)
data(mtcars)
using(mtcars, lm(mpg~wt))
with(mtcars, lm(mpg~wt))
z <- with(mtcars, lm(mpg~wt))
summary(x)
summary(z)
library(swirl)
swirl()
bye()
data(mtcars)
with(mtcars, lm(mpg~wt))
l <- with(mtcars, lm(mpg~wt))
summary(l)
predict(l)
x <- predict(l)
t.test(x)
?predict
require(utils)
for(fn in methods("predict"))
try({
f <- eval(substitute(getAnywhere(fn)$objs[[1]], list(fn = fn)))
cat(fn, ":\n\t", deparse(args(f)), "\n")
}, silent = TRUE)
predict.lm(l,newdata = data.frame(wt=mean(mtcars$wt)), interval = "confidence")
?mtcars
predict.lm(l,newdata = data.frame(wt=3000000), interval = "confidence")
predict.lm(l,newdata = data.frame(wt=.3), interval = "confidence")
predict.lm(l,newdata = data.frame(wt=3), interval = "confidence")
head(mtcars)
predict.lm(l,newdata = data.frame(x=3), interval = "confidence")
predict.lm(l,newdata = data.frame(wt=3), interval = "confidence")
predict.lm(l,newdata = data.frame(wt=3))
predict.lm(l,newdata = data.frame(wt=3), interval = "prediction")
predict.lm(l,newdata = data.frame(wt=2*mean(mtcars$wt)), interval = "confidence")
mean(mtcars$wt)
predict.lm(l,newdata = data.frame(wt=mean(mtcars$wt)/2), interval = "confidence")
l <- with(mtcars, fit(mpg~I(wt/2))
)
l <- with(mtcars, lm(mpg~I(wt/2)))
predict.lm(l,newdata = data.frame(wt=mean(mtcars$wt/2)), interval = "confidence")
predict.lm(l,newdata = data.frame(wt=mean(mtcars$wt)), interval = "confidence")
predict.lm(l,newdata = data.frame(wt=mean(mtcars$wt)/2), interval = "confidence")
x <- mtcars$wt/2
y <- mtcars$mpg
l <- lm(y~x)
predict(l,newdata = data.frame(x=mean(x)), interval = "confidenct")
predict(l,newdata = data.frame(x=mean(x)), interval = "confidence")
p <- predict(l,newdata = data.frame(x=mean(x)), interval = "confidence")
summary(l)
summary(p)
p
pfit
p$fit
p[0]
p[1]
t.test(x=mean(x), y=p[1])
libarary(swirl)
library(swirl)
swirl()
ones <- rep(1, nrow(galton))
play()
head(galton)
lm(child~ones + parent - 1, galton)
lm(child~parent, galton)
lm(child~ones + parent, galton)
ones + parent
ones + galton$parent
ones + galton$parent - 1
nxt()
lm(Child ~ ones + parent - 1, galton)
lm(child ~ ones + parent - 1, galton)
lm(child ~ ones + parent, galton)
lm(child~1, galton)
View(trees)
library(swirl)
swirl()
fit <- lm(Volume ~ Girth + Height + Constant - 1, trees)
trees2 <- eliminate("Girth", trees)
View(trees2)
fit2 <- lm(Volume ~ Height + Constant - 1, trees2)
lapply(list(fit,fit2), coef)
x1c <- simbias()
play()
View(x1c)
nxt()
apply(x1c, 1, mean)
fit1 <- lm(Fertility~Agriculture, data=swiss)
fit3 <- lm(Fertility~Agriculture+Examination+Education, data=swiss)
anova(fit1, fit3)
deviance(fit3)
d <- deviance(fit3)/43
n <- (deviance(fit1) - deviance(fit3))/2
n/d
pf(n/d,2,43, lower.tail=FALSE)
shapiro.test(fit3$residuals)
anova(fit1, fit3, fit5, fit6)
